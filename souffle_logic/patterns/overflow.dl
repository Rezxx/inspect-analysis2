#if DEBUG
	#if VERBOSE
		.output PossibleOverflowVar
	#endif

	.output PossibleOverflow
	.output OverflowCheck
	.output UnderflowCheck
#endif

.output OverflowViolation

.decl PossibleOverflow(insn: Insn, var: Var)

.decl PossibleOverflowVar(var: Var)

PossibleOverflowVar(var):-
	AllActionParam(_, _, param),
	pointer.VarPointsTo(var, param).


PossibleOverflow(insn, result):-
	PossibleOverflowVar(var),
	_AssignVar(insn, result, var),
	(_AssignType(insn, result, "Sub");
	_AssignType(insn, result, "Add")).


.decl OverflowCheck(var:Var)

OverflowCheck(result):-
	PossibleOverflow(_, result),
	pointer.VarPointsTo(var, result),
	_AssignType(_, bool, "LeX"),
	_AssignVar(_, bool, var),
	_AssignVar(_, bool, other),
	_SimpleAssign(_, other, "-4.6116860184273879E18").

.decl UnderflowCheck(var:Var)
UnderflowCheck(result):-
	PossibleOverflow(_, result),
	pointer.VarPointsTo(var, result),
	_AssignType(_, bool, "LtX"),
	_AssignVar(_, bool, var),
	_AssignVar(_, bool, other),
	_SimpleAssign(_, other, "4.6116860184273879E18").


.decl OverflowViolation(action: Function, insn: Insn)

OverflowViolation(action, insn):-
	PossibleOverflow(insn, result),
	(!OverflowCheck(result);
	!UnderflowCheck(result)),
	_FuncInsn(function,insn),
	ActionFuncReachable(action, function, _).